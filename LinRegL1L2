import numpy as np

def L1L2_regression(X, y, alpha=1.0, l1_ratio=0.5, lr=0.01, n_iter=1000):
    
    X = np.array(X)
    y = np.array(y)
    X_b = np.c_[np.ones((X.shape[0], 1)), X]
    n_samples, n_features = X_b.shape
    weights = np.zeros(n_features)

    for i in range(n_iter):
        y_pred = X_b.dot(weights)
        error = y_pred - y

        grad = (2 / n_samples) * X_b.T.dot(error)
        l1_grad = alpha * l1_ratio * np.sign(weights)
        l2_grad = alpha * (1 - l1_ratio) * 2 * weights

        l1_grad[0] = 0
        l2_grad[0] = 0

        weights -= lr * (grad + l1_grad + l2_grad)

    return weights
